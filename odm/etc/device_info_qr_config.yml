device: mondrian

positions:
  important_info:
    size: 400
    xAxis: 10
    yAxis: 280
  expand_info:
    size: 400
    xAxis: 45
    yAxis: 50

importantInfoList:
  # PCB SN
  - type: command
    name: pcb_sn
    key_name: a
    need_name: true
    command: getprop ro.ril.oem.sno

  # Battery level
  - type: command
    name: battery_level
    key_name: b
    need_name: true
    command: printf "%03d%%" $(dumpsys battery | head -11 | tail -1 | cut -d ' ' -f 4)

  # MEID, if the phone supports CDMA, it must have the value
  - type: sim
    name: meid
    key_name: g
    need_name: true

  # Factory ID
  - type: command
    name: factory_id
    key_name: o
    need_name: true
    command: getprop ro.ril.factory_id

  # Software version
  - type: software_version
    name: software_version
    key_name: v

checkInfoList:

  # Secure boot status
  - type: command
    name: secure_boot
    key_name: a
    command: getprop ro.boot.secureboot
    pass_value: 1

  # Whether the bootloader lock is locked
  - type: command
    name: bootloader_lock
    key_name: b
    command: getprop ro.boot.verifiedbootstate
    pass_value: green

  # RPMP provision
  - type: command
    name: rpmp
    key_name: c
    # Qualcomm
    command: getprop vendor.sys.rpmb_state
    pass_value: 23
    # MediaTek
    # command: getprop sys.rpmb_state
    # pass_value: 22

  # Speaker calibrate status check
  - type: command
    name: speaker_calibrate
    key_name: e
    command: getprop vendor.audio.chk.cal.spk
    pass_value: 1

  # Hardware version
  - type: command
    name: hardware_version
    key_name: m
    command: getprop ro.boot.hwlevel
    pass_value: MP

  # Check if NV and Hardware versions matched
  - type: command
    name: nv_hw_match
    key_name: A
    command: getprop persist.radio.skhwc_matchres
    pass_value: MATCH

  # Battery encryption check
  - type: command
    name: battery_encryption
    key_name: y
    # desc: printf "$(node_one)$(node_two)"
    command: printf "$(cat /sys/class/qcom-battery/chip_ok)$(cat /sys/class/qcom-battery/authentic)"
    # desc: "${pass_value_one}${pass_value_two}"
    pass_value: 11

  # Camera calibrate status check
  - type: command
    name: camera_calibrate
    key_name: u
    # support online write
    command: getprop vendor.camera.sensor.mi.databin.existmask
    # doesn't support: persist.vendor.camera.mi.dualcal.exist
    pass_value: 17

  # Debug policy
  - type: command
    name: debug_policy
    key_name: l
    command: getprop ro.boot.dp
    pass_value: 0x20

  # Security Key: FIDO
  - type: security_key
    name: fido
    key_name: h

  # Security Key: IFAA
  - type: security_key
    name: ifaa
    key_name: g

  # Digital rights management key: Widevine
  - type: security_key
    name: widevine
    key_name: q

  # Android Key box, services for DRM(Digital Rights Management)
  - type: security_key
    name: key_box
    key_name: t

  # Airplane mode check
  - type: command
    name: airplane_mode
    key_name: Y
    command: settings get global airplane_mode_on
    pass_value: 0

  # Modem MBN, check for that carrier-specific customization files by Qualcomm existence
  - type: command
    name: modem_mbn
    key_name: E
    command: getprop persist.radio.modem_mbn_check
    pass_value: 1

  # NFC function check
  - type: nfc
    name: nfc
    key_name: B

  # Screen calibrate check
  - type: command
    name: screen_calibrate
    key_name: x
    command: getprop vendor.display.panel.calibration.status
    pass_value: 0

  # Check for residual test pictures
  - type: command
    name: picture
    key_name: p
    command: ls -lR /sdcard/DCIM | grep -c "^-"
    pass_value: 0

  # Check if ramdump is on
  - type: command
    name: ramdump
    key_name: D
    command: getprop ro.boot.ramdump
    pass_value: disable

  # Check if Modem NV info exists
  - type: command
    name: modem
    key_name: w
    command: getprop persist.radio.goldencopy_flag
    pass_value: true

  # Sdcard status check
  - type: sdcard
    name: sdcard
    key_name: v

  # Sensor calibrate status check
  - type: sensor
    name: sensor
    key_name: z
    param_map:
      CN: "11111"
      GL: "111111"

  # SIM card status
  - type: command
    name: sim_card
    key_name: o
    command: getprop gsm.sim.state
    pass_value: ABSENT,ABSENT

  # SIM tray status
  - type: sim
    name: sim_tray
    key_name: s
    pass_value: 1
  #  # SIM tray status
  #  - type: command
  #    name: sim_tray
  #    key_name: s
  #    command: cat /sys/devices/platform/soc/soc:odm/soc:odm:simtray/status
  #    pass_value: '1'
  #    # If the above node does not exist you can use the following method
  #    # command: mtb 5 1 | awk 'END {print}' | cut -d ":" -f 2
  #    # pass_value: " 27 00 00 00 04 00 00 00 01 00 00 00"

  - type: command
    name: recovery
    key_name: G
    command: "[ $(getprop ro.build.ab_update) == true ] && path='/mnt/rescue/recovery/last_format_data' || path='/cache/recovery/last_format_data'; [ -f $path ] && echo 'EXIST' || echo 'NOT EXIST'"
    pass_value: NOT EXIST
    
  - type: command
    name: modem
    key_name: H
    command: getprop persist.radio.operating_mode
    pass_value: 0
    
  - type: account
    name: mi_account
    key_name: T
    
expandInfoList:
  # Phone SN
  - type: command
    name: phone_sn
    key_name: c
    command: getprop ro.ril.oem.psno

  # System image version
  - type: command
    name: version
    key_name: d
    command: getprop ro.build.version.incremental

  # IMEI1
  - type: sim
    name: imei1
    key_name: e

  # IMEI2
  - type: sim
    name: imei2
    key_name: f

  # Bluetooth address
  - type: command
    name: bluetooth_address
    key_name: h
    #    command: getprop ro.ril.oem.btmac
    command: a=($(od -An -tx1 /data/vendor/mac_addr/bt.mac));s=$(IFS=:; echo "${a[*]}");echo $s

  # WiFi address
  - type: command
    name: wifi_address
    key_name: i
    #    command: getprop ro.ril.oem.wifimac
    command: a=($(od -An -tx1 /data/vendor/mac_addr/wlan.mac));s=$(IFS=:; echo "${a[*]}");echo $s

  # CPU id
  - type: command
    name: cpu_id
    key_name: k
    command: getprop ro.boot.cpuid

  # Storage id
  - type: command
    name: storage_id
    key_name: l
    command: cat sys/class/mi_memory/mi_memory_device/ufshcd0/dump_string_desc_serial

  # tzProvision
  - type: security_key
    name: tz_key
    key_name: m

  # Hardware version
  - type: command
    name: hardware_version
    key_name: n
    command: getprop ro.boot.hwversion

  # Maximum CPU frequency
  - type: cpu_frequency
    name: cpu_frequency
    key_name: p
    param_map:
      core_number: 8

  # Memory size
  - type: command
    name: memory_size
    key_name: q
    command: printf "$(cat /proc/mv | head -1 | cut -d ' ' -f 3)GB"

  # Storage size
  - type: command
    name: storage_size
    key_name: r
    command: printf "$(cat /proc/mv | head -2 | tail -1 | cut -d ' ' -f 3)GB"

  # Project code
  - type: project_name
    name: project_name
    key_name: s
    param_map:
      mondrian: M11A

  # MIUI cust image version
  # Optional
  - type: command
    name: cust_version
    key_name: T
    command: getprop ro.miui.business.version
